<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpciÃ³n 1: Restaurar una base de datos Graviton2 con MySQL en RDS a partir de un snapshot x86 on Graviton2</title>
    <link>/es/amazonrds/01_snapshot.html</link>
    <description>Recent content in OpciÃ³n 1: Restaurar una base de datos Graviton2 con MySQL en RDS a partir de un snapshot x86 on Graviton2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 10 Apr 2020 11:14:51 -0600</lastBuildDate><atom:link href="/es/amazonrds/01_snapshot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Crear la instancia de RDS MySQL</title>
      <link>/es/amazonrds/01_snapshot/creatingcluster8.html</link>
      <pubDate>Fri, 10 Apr 2020 11:14:51 -0600</pubDate>
      
      <guid>/es/amazonrds/01_snapshot/creatingcluster8.html</guid>
      <description>Empieza revisando los contenidos de stack de definicion de RDS MySQL 8 CDK. El archivo estÃ¡ en la siguiente ruta: graviton2_labs/rds_graviton/rds_mysql_8.py
 db_mysql8 = rds.DatabaseInstance(self, &amp;quot;MySQL8&amp;quot;, engine=rds.DatabaseInstanceEngine.mysql( version=rds.MysqlEngineVersion.VER_8_0_21 ), instance_type=ec2.InstanceType(&amp;quot;m5.4xlarge&amp;quot;), vpc=vpc, multi_az=False, publicly_accessible=True, allocated_storage=100, storage_type=rds.StorageType.IO1, iops=5000, cloudwatch_logs_exports=[&amp;quot;error&amp;quot;, &amp;quot;general&amp;quot;, &amp;quot;slowquery&amp;quot;], deletion_protection=False, enable_performance_insights=True, delete_automated_backups=True, backup_retention=core.Duration.days(1), parameter_group=rds.ParameterGroup.from_parameter_group_name( self, &amp;quot;para-group-mysql&amp;quot;, parameter_group_name=&amp;quot;default.mysql8.0&amp;quot; ) )  AWS Cloud Development Kit (CDK) simplifica la creaciÃ³n de servicios en AWS como por ejemplo crear instancias de Amazon RDS. El fragmento de cÃ³digo escrito en Python de arriba te permite crear una instancia de RDS MySQL 8 con 100GB y un volumen Amazon EBS de tipo IO1 en una Ãºnica zona de disponibilidad (single-AZ).</description>
    </item>
    
    <item>
      <title>Importar Datos de prueba a MySQL</title>
      <link>/es/amazonrds/01_snapshot/loadingdata.html</link>
      <pubDate>Fri, 10 Apr 2020 11:14:51 -0600</pubDate>
      
      <guid>/es/amazonrds/01_snapshot/loadingdata.html</guid>
      <description>Antes de iniciar este laboratorio, asegurate de estar en el directorio graviton2-labs. Si noe estas ahÃ­ ejecuta este comando en la terminal de Cloud9:  cd ~/environment/graviton2-labs/ Clona la base de datos de ejemplo de MySQL.
git clone https://github.com/datacharmer/test_db.git cd test_db Al terminar, conectate a tu instancia de MySQL ejecutando el siguiente comando:  mysql -h $DBHOST -P $DBPORT -u$DBUSER -p$DBPASS Si experimentas problemas en la conneciÃ³n debido a la falta de las variables de ambiente ejecuta el siguiente cÃ³digo para configurar las credenciales.</description>
    </item>
    
    <item>
      <title>RecuperaciÃ³n del snapshot de la instancia con Graviton2</title>
      <link>/es/amazonrds/01_snapshot/restoringrds.html</link>
      <pubDate>Fri, 10 Apr 2020 11:14:51 -0600</pubDate>
      
      <guid>/es/amazonrds/01_snapshot/restoringrds.html</guid>
      <description>Ya estamos listos para hacer la recuperaciÃ³n de la base de datos a una nueva en una instancia con Graviton2. Revisa los contenidos del archivo de definicion de la instancia de bases de datos RDS MySQL 8 que se encuentra en la ruta graviton2_labs/rds_graviton/ds_restore.py
 snapshot_id = ssm.StringParameter.value_for_string_parameter(self ,&amp;quot;graviton_rds_lab_snapshot&amp;quot;) g2_db_mysql8 = rds.DatabaseInstanceFromSnapshot(self, &amp;quot;GravitonMySQL&amp;quot;, engine=rds.DatabaseInstanceEngine.mysql( version=rds.MysqlEngineVersion.VER_8_0_21 ), instance_type=ec2.InstanceType(&amp;quot;m6g.4xlarge&amp;quot;), snapshot_identifier=snapshot_id, vpc=vpc, multi_az=False, publicly_accessible=True, allocated_storage=100, storage_type=rds.StorageType.IO1, iops=5000, cloudwatch_logs_exports=[&amp;quot;error&amp;quot;, &amp;quot;general&amp;quot;, &amp;quot;slowquery&amp;quot;], enable_performance_insights=True, deletion_protection=False, delete_automated_backups=True, backup_retention=core.</description>
    </item>
    
  </channel>
</rss>
